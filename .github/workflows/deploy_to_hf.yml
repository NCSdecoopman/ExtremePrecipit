name: Déployer l'application Dockerisée sur Hugging Face

on:
  push:
    branches:
      - app

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupérer tout le code du repo GitHub (branche "app")
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. (Optionnel) Installer Git LFS si nécessaire pour d'autres fichiers volumineux
      - name: Installer Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install

      # 3. Uploader les fichiers du dossier "data/" vers la Space
      - name: Uploader les données dans la Space
        env:
          HF_TOKEN: ${{ secrets.HF_VIZ_APP }}  # Votre token HF (avec droits write sur la Space)
        run: |
          python <<EOF
          import warnings
          warnings.filterwarnings("ignore", message="It seems that you are about to commit a data file*")
          
          from huggingface_hub import HfApi, upload_file
          import os
          
          # CONFIG
          SPACE_ID = "ncsdecoopman/ExtremePrecipit"  # Nom complet de la Space
          LOCAL_DIR = "data"                         # Dossier local du repo
          REMOTE_DIR = "data"                        # Sous-dossier sur la Space
          
          api = HfApi()
          
          # Parcourt récursivement le dossier local "data"
          for root, _, files in os.walk(LOCAL_DIR):
              for file in files:
                  local_path = os.path.join(root, file)
                  # Chemin relatif par rapport à "data"
                  relative_path = os.path.relpath(local_path, LOCAL_DIR)
                  # Sur la Space -> "data/..."
                  repo_path = f"{REMOTE_DIR}/{relative_path}".replace("\\", "/")
          
                  print(f"Uploading {local_path} to {repo_path}...")
          
                  upload_file(
                      path_or_fileobj=local_path,
                      path_in_repo=repo_path,
                      repo_id=SPACE_ID,
                      repo_type="space",
                      token=os.environ['HF_TOKEN'],
                  )
          EOF

      # 4. Préparer le dossier "deploy" et pousser la config Docker vers la Space
      - name: Préparer et pousser l'app Dockerisée
        env:
          HF_TOKEN: ${{ secrets.HF_VIZ_APP }}
          HF_USER: "ncsdecoopman"
          HF_SPACE: "ExtremePrecipit"
        run: |
          # ------------------------------------------------------
          # a) Créer le dossier "deploy" et y copier le code
          #    (sans .git ni .github)
          # ------------------------------------------------------
          mkdir deploy
          rsync -av --exclude=deploy --exclude=.git --exclude=.github . deploy/

          # ------------------------------------------------------
          # b) Créer le Dockerfile
          # ------------------------------------------------------
          python <<EOF
          import warnings
          warnings.filterwarnings("ignore", message="It seems that you are about to commit a data file*")

          from huggingface_hub import HfApi, upload_file
          import os

          # CONFIG
          SPACE_ID = "ncsdecoopman/ExtremePrecipit"  # identifiant complet de votre Space
          LOCAL_DIR = "data"                         # dossier local dans le repo GitHub
          REMOTE_DIR = "data"                        # sous-dossier de la Space (côté HF)

          api = HfApi()

          # Parcourt récursivement le dossier local "data"
          for root, _, files in os.walk(LOCAL_DIR):
              for file in files:
                  local_path = os.path.join(root, file)
                  # Chemin relatif par rapport à "data"
                  relative_path = os.path.relpath(local_path, LOCAL_DIR)
                  # Sur la Space, on veut le même chemin dans "data/..."
                  repo_path = f"{REMOTE_DIR}/{relative_path}".replace("\\", "/")

                  print(f"Uploading {local_path} to {repo_path}...")

                  upload_file(
                      path_or_fileobj=local_path,
                      path_in_repo=repo_path,
                      repo_id=SPACE_ID,
                      repo_type="space",
                      token=os.environ['HF_TOKEN'],
                  )
          EOF


          # c) .huggingface.yaml + README
          echo "sdk: docker" > deploy/.huggingface.yaml
          echo "# Déploiement Docker + snapshot_download pour data" > deploy/README.md

          # d) Initialiser un dépôt Git local dans "deploy" pour pousser vers la Space
          cd deploy
          git init
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git branch -M main

          HF_REMOTE="https://${HF_USER}:${HF_TOKEN}@huggingface.co/spaces/${HF_USER}/${HF_SPACE}"
          git remote add hf "$HF_REMOTE"

          git add .
          git commit -m "Déploiement Docker + snapshot_download pour data"
          git push hf main --force
